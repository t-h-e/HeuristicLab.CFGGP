# helper (protected versions)
def div(nom, denom):
  if denom <= 0.00001:
    return nom
  else:
    return nom / denom


def divInt(nom, denom):
  if denom <= 0.00001:
    return nom
  else:
    return nom // denom

    
def mod(nom, denom):
  if denom <= 0.00001:
    return nom
  else:
    return nom % denom

    
def getIndex(curList, index):
  if not curList:
    return 0
  return curList[index % len(curList)]


def deleteListItem(curList, index):
  if not curList:
    return
  del curList[index % len(curList)]


def setListIndexTo(curList, index, value):
  if not curList:
    return
  curList[index % len(curList)] = value
# helper END


#  evolved function
def evolve(inList):
  # constant defines allowed maximum number of all loops performed
  loopBreakConst = 1500
  # initialises variable which should be used to count the number of loop iterations
  loopBreak = 0
  # "stop" is a boolean flag which should be used to check if the EA wants the program to stop
  <insertCodeHere>
  return inList


#  train function
def compare(inList):
  return list(reversed(inList))


def fitnessTrainingCase(inList):
  eval = evolve(list(inList))
  train = compare(list(inList))
  if len(eval) != len(train):
    return False
  
  for (x, y) in zip(eval, train):
    if x != y:
      return False

  return True

training = [list(range(0, 10)),
      [5,8,52,68,4,5,2],
      [9,8,7,44,6,8,44,2,6,4,112,6,312,5]]

#  function to evaluate fitness
def fitness():
  result = []
  for l in training:
    result.append(fitnessTrainingCase(l))

  return result

cases = fitness()
