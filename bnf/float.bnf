// *****************************************************************************
// float grammar
// *****************************************************************************

<float_var> ::= // placholder for variable names

<assign> ::= <float_assign>
<float_assign> ::= <float_var> '=' <float> | <float_var> <arith_assign> <float>

<float> ::= <float_var> | <float_const>
        | <arith_prefix><float>
        | '(' <float> <arith_ops> <float> ')' | '(' <int> <arith_ops> <float> ')' | '(' <float> <arith_ops> <int> ')'
        | <float_arith_ops_protected>'('<float>','<float>')' | <float_arith_ops_protected>'('<int>','<float>')' | <float_arith_ops_protected>'('<float>','<int>')'
        | 'math.ceil('<float>')' | 'math.floor('<float>')' | 'round('<float>')'
        | 'min('<float>', '<float>')' | 'min('<int>', '<float>')' | 'min('<float>', '<int>')'
        | 'max('<float>', '<float>')' | 'max('<int>', '<float>')' | 'max('<float>', '<int>')'
        | 'abs('<float>')'

<float_const> ::= <number>'.'<number>

<float_arith_ops_protected> ::= 'div' | 'divInt' | 'mod'

// Return int

// have to call int() for python 2.7.5
<int> ::= 'int(math.ceil('<float>'))' | 'int(math.floor('<float>'))' | 'int(round('<float>'))' | 'int('<float>')'

// Return bool

<bool> ::= <float> <comp_op> <float> | <int> <comp_op> <float> | <float> <comp_op> <int>
