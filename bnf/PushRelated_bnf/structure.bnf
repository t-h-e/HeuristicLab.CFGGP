// *****************************************************************************
// Grammar containing the python structure
// *****************************************************************************

<predefined> ::= <code>

<code> ::= <code><statement>'\n' | <statement>'\n'

<statement> ::= <simple_stmt> | <compound_stmt>
<simple_stmt> ::= <call> | <assign>
<compound_stmt> ::= <for>

<call> ::= // call statements
<assign> ::= // assign statements

<for> ::= // for statements depend on lists or use of range

<loop-header> ::= 'loopBreak% = 0\n'
// stop.value is set by outer code to break immediately
<loop-block> ::=':{:\n'<code>'\nif loopBreak% > loopBreakConst or stop.value:{:\nbreak\n:}loopBreak% += 1\n:}'

// for integer and float

<number> ::= <number><num> | <num>
<num> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<comp_op> ::= '<'|'>'|'=='|'>='|'<='|'!='|'is'|'is not'

// for string

<string_const_part> ::= <string_const_part><string_literal> | <string_literal>

// for list

<in_list_comp_op> ::= 'in'|'not in'

<list_comp_op> ::= '=='|'!='
