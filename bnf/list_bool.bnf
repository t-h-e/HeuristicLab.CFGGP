// *****************************************************************************
// list grammar for bool list
// *****************************************************************************

<list_bool_var> ::= // placholder for variable names

<assign> ::= <list_bool_assign>
<list_bool_assign> ::= <list_bool_var>' = '<list_bool>

<list_bool> ::= <list_bool_var> | <list_bool_slice>
<list_bool_slice> ::= <list_bool>'['<int>':'<int>']' | <list_bool>'[:'<int>']' | <list_bool>'['<int>':]'

<getListIndexCall_bool> ::= 'getIndexBoolList('<list_bool>', '<int>')'
<setListIndexToCall_bool> ::= 'setListIndexTo('<list_bool>', '<int>', '<bool>')'
<deleteListItemCall_bool> ::= 'deleteListItem('<list_bool>', '<int>')'

<call> ::= <list_bool_var>'.insert('<int>','<bool>')'
         | <deleteListItemCall_bool>
         | <setListIndexToCall_bool>

<bool> ::= <getListIndexCall_bool>


// Add to

<call> ::= <list_bool_var>'.append('<bool>')'

<for> ::= <loop-header>'for forCounter% in '<list_bool><loop-block>
        | <loop-header>'for '<bool_var>' in '<list_bool><loop-block>

// Return int

<int> ::= 'len('<list_bool>')'

// Return bool

<bool> ::= <bool> <in_list_comp_op> <list_bool> | <list_bool> <list_comp_op> <list_bool>
